{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/pages/Recipes.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","authenticatedOptions","Dropdown","Toggle","Menu","unauthenticatedOptions","alwaysOptions","exact","Header","Navbar","bg","expand","Brand","style","color","textDecoration","aria-controls","Collapse","Nav","userName","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","password","SignUp","handleChange","event","target","name","value","onSignUp","preventDefault","msgAlert","history","setUser","email","password_confirmation","passwordConfirmation","then","res","push","catch","error","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","Button","withRouter","SignIn","onSignIn","SignOut","clearUser","headers","Authorization","token","signOut","finally","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","Recipe","getRecipes","console","updateRecipes","recipes","createRecipe","ingredients","recipeName","steps","recipe","owner","ingredientName","qty","units","updateRecipe","updatedIngredients","selectedRecipeId","updatedSteps","ingredientsToShow","stepsToShow","componentDidMount","handleFieldChange","includes","handleUpdateFieldChange","addIngredient","unit","addUpdateIngredient","addStep","addUpdatedStep","removeStep","index","splice","removeUpdateStep","removeIngredient","removeUpdateIngredient","deleteRecipe","recipeId","userId","_id","bind","recipeToShow","selectedRecipe","recipeToShowName","editRecipe","editIngredientsForms","editStepsForms","listStyle","display","textAlign","columnCount","alignContent","justifyContent","alignItems","justifyItems","onClick","map","ingredient","toString","defaultValue","step","setRecipeName","prevState","sort","ingredientA","ingredientB","toLowerCase","Col","recipeA","recipeB","length","App","msgAlerts","filter","msg","uuid","path","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.58bd2188.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          user ? <Component {...props} /> : <Redirect to='/' />\n        }\n      />\n    )\n  }\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './AutoDismissAlert.scss'\n\nclass AutoDismissAlert extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      show: true\n    }\n    this.timeoutId = null\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(this.handleClose, 5000)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeoutId)\n  }\n\nhandleClose = () => this.setState({ show: false })\n\nrender () {\n  const { variant, heading, message, deleteAlert, id } = this.props\n\n  // Delete this alert after the fade animation time (300 ms by default)\n  if (!this.state.show) {\n    setTimeout(() => {\n      deleteAlert(id)\n    }, 300)\n  }\n\n  return (\n    <Alert\n      dismissible\n      show={this.state.show}\n      variant={variant}\n      onClose={this.handleClose}>\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n}\n\nexport default AutoDismissAlert\n","import React, { Fragment } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { Link, NavLink } from 'react-router-dom'\nimport { Dropdown } from 'react-bootstrap'\n\nconst authenticatedOptions = (\n  <Fragment>\n    {/* <NavLink to='/change-password' className='nav-link'>Change Password</NavLink> */}\n    <NavLink to='/recipes' className='nav-link'>Recipes</NavLink>\n    <div className='cp-signout-div'>\n      <Dropdown>\n        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">Manage Account</Dropdown.Toggle>\n        <Dropdown.Menu variant=\"dark\">\n          <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n          <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  </Fragment>\n)\n\nconst unauthenticatedOptions = (\n  <Fragment>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </Fragment>\n)\n\nconst alwaysOptions = (\n  <Fragment>\n    <NavLink exact to='/' className='nav-link'>Home</NavLink>\n  </Fragment>\n)\n\nconst Header = ({ user }) => (\n  <Navbar bg='success' variant='dark' expand='md'>\n    <Navbar.Brand>\n      <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>Recipes.com</Link>\n    </Navbar.Brand>\n    <Navbar.Toggle aria-controls='basic-navbar-nav' />\n    <Navbar.Collapse id='basic-navbar-nav'>\n      <Nav className='ml-auto'>\n        {user && (\n          <span className='navbar-text mr-2'>Welcome, {user.userName}</span>\n        )}\n        {alwaysOptions}\n        {user ? authenticatedOptions : unauthenticatedOptions}\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://ancient-oasis-53081.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (credentials) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up/',\n    data: {\n      credentials: {\n        email: credentials.email,\n        userName: credentials.userName,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        userName: credentials.userName,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = (user) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password/',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignUp extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      userName: '',\n      password: '',\n      passwordConfirmation: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignUp = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signUp(this.state)\n    .then(() => signIn(this.state))\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '', passwordConfirmation: '' })\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, userName, password, passwordConfirmation } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={this.onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='userName'>\n            <Form.Label>User Name</Form.Label>\n            <Form.Control\n              required\n              type='userName'\n              name='userName'\n              value={userName}\n              placeholder='Create User Name'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignUp)\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\nexport const createRecipeSuccess = 'Recipe Created'\nexport const deleteRecipeSuccess = 'Recipe Deleted'\nexport const updateRecipeSuccess = 'Recipe Updated'\nexport const createRecipeFailure = 'Failed to Create Recipe'\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignIn extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      userName: '',\n      password: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignIn = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signIn(this.state)\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ userName: '', password: '' })\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { userName, password } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={this.onSignIn}>\n          <Form.Group controlId='userName'>\n            <Form.Label>User Name</Form.Label>\n            <Form.Control\n              required\n              type='userName'\n              name='userName'\n              value={userName}\n              placeholder='Enter User Name'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignIn)\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nclass SignOut extends Component {\n  componentDidMount () {\n    const { msgAlert, history, clearUser, user } = this.props\n\n    signOut(user)\n      .finally(() =>\n        msgAlert({\n          heading: 'Signed Out Successfully',\n          message: signOutSuccess,\n          variant: 'success'\n        })\n      )\n      .finally(() => history.push('/'))\n      .finally(() => clearUser())\n  }\n\n  render () {\n    return ''\n  }\n}\n\nexport default withRouter(SignOut)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass ChangePassword extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      oldPassword: '',\n      newPassword: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonChangePassword = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, user } = this.props\n\n  changePassword(this.state, user)\n    .then(() =>\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ oldPassword: '', newPassword: '' })\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { oldPassword, newPassword } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={this.onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(ChangePassword)\n","import React, { Component } from 'react'\nimport Form from 'react-bootstrap/Form'\nimport { Button, Col } from 'react-bootstrap'\n\nimport apiUrl from '../../apiConfig'\nimport { createRecipeSuccess, deleteRecipeSuccess, updateRecipeSuccess, createRecipeFailure } from '../AutoDismissAlert/messages'\nimport axios from 'axios'\n\nclass Recipe extends Component {\n  constructor (props) {\n    super(props)\n    this.addStep = this.addStep.bind(this)\n    this.addIngredient = this.addIngredient.bind(this)\n    this.createRecipe = this.createRecipe.bind(this)\n\n    this.state = {\n      recipeName: '',\n      ingredients: [\n        { ingredientName: '', qty: '', units: '' }\n      ],\n      steps: [''],\n      recipes: [],\n      recipeToShow: '',\n      selectedRecipe: false,\n      selectedRecipeId: '',\n      recipeToShowName: '',\n      ingredientsToShow: [],\n      stepsToShow: [],\n      updatedIngredients: [\n        { ingredientName: '', qty: '', units: '' }\n      ],\n      updatedSteps: [''],\n      editRecipe: false\n    }\n  }\n\n    getRecipes = (token) => {\n      return axios({\n        url: apiUrl + '/recipes/find-recipes/',\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n        .catch(console.error)\n    }\n\n      updateRecipes = () => {\n        this.getRecipes(this.props.user.token).then(\n          (recipes) => {\n            this.setState({ recipes: recipes.data.recipes })\n          }\n        )\n      }\n\n      componentDidMount () {\n        this.updateRecipes()\n      }\n\n  // creates a new recipe\n  createRecipe = function (event) {\n    event.preventDefault()\n    const { msgAlert } = this.props\n    const ingredients = this.state.ingredients\n    const name = this.state.recipeName\n    const steps = this.state.steps\n    return axios({\n      method: 'POST',\n      url: apiUrl + '/recipes/new',\n      data: {\n        recipe: { name: name, ingredients: ingredients, steps: steps, owner: this.props.user }\n      }\n    })\n      .then((recipe) => this.state.recipes.push(recipe.data.recipe))\n      .then(() => {\n        this.setState({\n          recipeName: '',\n          ingredients: [{ ingredientName: '', qty: '', units: '' }],\n          steps: ['']\n        })\n        msgAlert({\n          heading: 'Recipe Created',\n          message: createRecipeSuccess,\n          variant: 'success'\n        })\n      })\n      .catch((error) => {\n        this.setState({\n          recipeName: '',\n          ingredients: [\n            { ingredientName: '', qty: '', units: '' }\n          ],\n          steps: ['']\n        })\n        msgAlert({\n          heading: 'Failed to Create Recipe: ' + error.message,\n          message: createRecipeFailure,\n          variant: 'danger'\n        })\n      })\n  }\n\n  // consoleLog = (event) => {\n  //   event.preventDefault()\n  //   // this.handleUpdateFieldChange()\n  //   console.log(event)\n  // }\n\n  updateRecipe = (event) => {\n    event.preventDefault()\n    const { msgAlert } = this.props\n    const ingredients = this.state.updatedIngredients\n    const id = this.state.selectedRecipeId\n    const steps = this.state.updatedSteps\n    return axios({\n      method: 'PATCH',\n      url: apiUrl + '/recipes/update/' + id,\n      data: {\n        recipe: { ingredients: ingredients, steps: steps }\n      }\n    })\n      .then(this.setState({ ingredientsToShow: this.state.updatedIngredients, stepsToShow: this.state.updatedSteps }))\n      .then(() => {\n        msgAlert({\n          heading: 'Recipe Updated',\n          message: updateRecipeSuccess,\n          variant: 'success'\n        })\n      })\n      .then(this.componentDidMount())\n  }\n\n  handleFieldChange = (event) => {\n    if (['ingredientName', 'qty', 'units'].includes(event.target.name)) {\n      const ingredients = [...this.state.ingredients]\n      ingredients[event.target.id][event.target.name] = event.target.value\n      this.setState({ ingredients })\n    } if (['steps'].includes(event.target.name)) {\n      const steps = [...this.state.steps]\n      steps[event.target.id] = event.target.value\n      this.setState({ steps })\n    } else {\n      this.setState({ [event.target.name]: event.target.value })\n    }\n  }\n\n    handleUpdateFieldChange = (event) => {\n      if (['ingredientName', 'qty', 'units'].includes(event.target.name)) {\n        const updatedIngredients = [...this.state.updatedIngredients]\n        updatedIngredients[event.target.id][event.target.name] = event.target.value\n        this.setState({ updatedIngredients })\n      } if (['updatedSteps'].includes(event.target.name)) {\n        const updatedSteps = [...this.state.updatedSteps]\n        updatedSteps[event.target.id] = event.target.value\n        this.setState({ updatedSteps })\n      } else {\n        this.setState({ [event.target.name]: event.target.value })\n      }\n    }\n\n  addIngredient = event => {\n    event.preventDefault()\n    this.setState({\n      ingredients: [\n        ...this.state.ingredients,\n        { ingredientName: '', qty: '', unit: '' }\n      ]\n    })\n  }\n\n    addUpdateIngredient = event => {\n      event.preventDefault()\n      this.setState({\n        updatedIngredients: [\n          ...this.state.updatedIngredients,\n          { ingredientName: '', qty: '', units: '' }\n        ]\n      })\n    }\n\n   addStep = event => {\n     event.preventDefault()\n     this.setState({\n       steps: [\n         ...this.state.steps,\n         event.target.value\n       ]\n     })\n   }\n\n     addUpdatedStep = event => {\n       event.preventDefault()\n       this.setState({\n         updatedSteps: [\n           ...this.state.updatedSteps,\n           event.target.value\n         ]\n       })\n     }\n\n  handleChange = (event) =>\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n\n  removeStep = index => {\n    this.state.steps.splice(index, 1)\n    this.setState({\n      steps: this.state.steps\n    })\n  }\n\n    removeUpdateStep = index => {\n      this.state.updatedSteps.splice(index, 1)\n      this.setState({\n        steps: this.state.updatedSteps\n      })\n    }\n\n  removeIngredient = index => {\n    this.state.ingredients.splice(index, 1)\n    this.setState({\n      ingredients: this.state.ingredients\n    })\n  }\n\n    removeUpdateIngredient = index => {\n      this.state.updatedIngredients.splice(index, 1)\n      this.setState({\n        updatedIngredients: this.state.updatedIngredients\n      })\n      this.updateRecipes()\n      this.componentDidMount()\n    }\n\n    deleteRecipe = (event) => {\n      const { msgAlert } = this.props\n      const recipeId = event.target.id\n      const userId = this.props.user._id\n      const token = this.props.user.token\n      return axios({\n        method: 'DELETE',\n        url: apiUrl + '/recipes/delete/' + userId + '/' + recipeId,\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n        .then(() =>\n          msgAlert({\n            heading: 'Recipe Deleted',\n            message: deleteRecipeSuccess,\n            variant: 'success'\n          })\n        )\n        .then(this.componentDidMount())\n    }\n\n    render () {\n    // const buttonStyle = {\n    //   borderRadius: '.5rem'\n    // }\n\n      const listStyle = {\n        listStyle: 'none',\n        color: 'black',\n        display: 'flex',\n        textAlign: 'bottom',\n        columnCount: '5',\n        alignContent: 'center',\n        justifyContent: 'center',\n        alignItems: 'center',\n        justifyItems: 'center'\n      }\n\n      // const listText = {\n      //   display: 'flex',\n      //   marginTop: '.3rem',\n      //   alignSelf: 'center'\n      // }\n\n      let editIngredientsForms\n      if (this.state.editRecipe) {\n        editIngredientsForms =\n        <Form onChange={this.handleUpdateFieldChange} onSubmit={this.updateRecipe}>\n          <Form.Group>\n            <br />\n            <Button className='form-btn' variant='success' onClick={this.addUpdateIngredient}>Add Ingredient</Button>\n\n            {this.state.updatedIngredients.map((ingredient, index) => {\n              return (\n                <div key={index}>\n                  <Form.Control\n                    type='text'\n                    placeholder='Ingredient Name'\n                    className='input-form'\n                    required\n                    id={index.toString()}\n                    name='ingredientName'\n                    defaultValue={this.state.updatedIngredients[index].ingredientName}\n                    onChange={this.handleChange}\n                  />\n                  <Form.Control\n                    type='number'\n                    className='input-form'\n                    required\n                    id={index.toString()}\n                    name='qty'\n                    // value={ingredient.qty}\n                    defaultValue={this.state.updatedIngredients[index].qty}\n                    placeholder='Quantity'\n                    onChange={this.handleChange}\n                  />\n                  <Form.Control\n                    type='text'\n                    placeholder='units'\n                    className='input-form'\n                    required\n                    id={index.toString()}\n                    name='units'\n                    defaultValue={this.state.updatedIngredients[index].units}\n                    onChange={this.handleChange}\n                  />\n                  <Button variant='danger' onClick={() => this.removeUpdateIngredient(index.toString())}>Remove</Button>\n                </div>\n              )\n            })}\n          </Form.Group>\n          <Button className='form-btn' variant='success' type='submit' onClick={this.updateRecipe}>Submit</Button>\n        </Form>\n      } else {\n        editIngredientsForms = null\n      }\n\n      let editStepsForms\n      if (this.state.editRecipe) {\n        editStepsForms =\n        <Form onChange={this.handleUpdateFieldChange} onSubmit={this.updateRecipe}>\n          <Form.Group>\n            <br />\n            <Button className='form-btn' variant='success' onClick={this.addUpdatedStep}>Add Step</Button>\n\n            {this.state.updatedSteps.map((step, index) => {\n              return (\n                <div key={index}>\n                  <Form.Control\n                    type='text'\n                    placeholder='Step'\n                    className='input-form'\n                    required\n                    id={index.toString()}\n                    name='updatedSteps'\n                    defaultValue={this.state.updatedSteps[index]}\n                    onChange={this.handleChange}\n                  />\n                  <Button variant='danger' onClick={() => this.removeUpdateStep(index)}>Remove</Button>\n                </div>\n              )\n            })}\n          </Form.Group>\n          <Button className='form-btn' variant='success' type='submit' onClick={this.updateRecipe}>Submit</Button>\n        </Form>\n      } else {\n        editStepsForms = null\n      }\n\n      const { setRecipeName } = this.state.recipeName\n      if (!this.state.selectedRecipe) {\n        return (\n          <div>\n            <Col className='recipeCreate'>\n              <Form className='recipeCard' onChange={this.handleFieldChange}>\n                <Form.Group>\n                  <Form.Label className='form-label'>Create New Recipe</Form.Label>\n                  <Form.Control\n                    className='input-form'\n                    required\n                    name='recipeName'\n                    value={setRecipeName}\n                    type='recipeName'\n                    placeholder='Recipe Name'\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label className='form-label'>Ingredients</Form.Label>\n                  <br />\n                  <Button className='form-btn' variant='success' onClick={this.addIngredient}>Add Ingredient</Button>\n\n                  {this.state.ingredients.map((ingredient, index) => {\n                    return (\n                      <div key={index}>\n                        <Form.Control\n                          type='text'\n                          placeholder='Ingredient Name'\n                          className='input-form'\n                          required\n                          id={index.toString()}\n                          name='ingredientName'\n                          value={ingredient.ingredientName}\n                          onChange={this.handleChange}\n                        />\n                        <Form.Control\n                          type='number'\n                          className='input-form'\n                          required\n                          id={index.toString()}\n                          name='qty'\n                          value={ingredient.qty}\n                          placeholder='Quantity'\n                          onChange={this.handleChange}\n                        />\n                        <Form.Control\n                          type='text'\n                          placeholder='units'\n                          className='input-form'\n                          required\n                          id={index.toString()}\n                          name='units'\n                          value={ingredient.units}\n                          onChange={this.handleChange}\n                        />\n                        <Button variant='danger' onClick={() => this.removeIngredient(index)}>Remove</Button>\n                      </div>\n                    )\n                  })}\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label className='form-label'>Steps</Form.Label>\n                  <br />\n                  <Button className='form-btn' variant='success' onClick={this.addStep}>Add Step</Button>\n                  {this.state.steps.map((step, index) => {\n                    return (\n                      <div key={index}>\n                        <Form.Control\n                          type='text'\n                          placeholder=\"Step\"\n                          className='input-form'\n                          required\n                          id={index.toString()}\n                          name='steps'\n                          value={step}\n                          onChange={this.handleChange}\n                        />\n                        <Button className='form-btn' variant='danger' onClick={() => this.removeStep(index)}>Remove</Button>\n                      </div>\n                    )\n                  })}\n                  <br />\n                </Form.Group>\n                <Button className='form-btn' variant='success' type='submit' onClick={this.createRecipe}>Submit</Button>\n              </Form>\n\n              {/* <h4>{this.collectionName}</h4> */}\n              <ul className='recipe-list'>{this.state.recipes\n                .sort((recipeA, recipeB) => {\n                  const nameA = recipeA.name.toLowerCase()\n                  const nameB = recipeB.name.toLowerCase()\n                  return nameA < nameB ? -1 : 1\n                })\n                .map((recipe) => (\n                  <li className='recipe-list' key={recipe._id} style={listStyle}>\n                    <Col>\n                      <Button variant=\"dark\" onClick={() => this.setState({ selectedRecipe: true, selectedRecipeId: recipe._id, recipeToShow: recipe, recipeToShowName: recipe.name, ingredientsToShow: recipe.ingredients, stepsToShow: recipe.steps })}>{recipe.name}</Button>\n                    </Col>\n                    <Col>\n              Steps:{recipe.steps.length}\n                    </Col>\n                    <Col>\n                      <p>Ingredients:{recipe.ingredients.length}</p>\n                    </Col>\n                    <Col>\n                      <Button variant=\"danger\" onClick={this.deleteRecipe} id={recipe._id}>Delete</Button>\n                    </Col>\n                  </li>\n                ))}</ul>\n            </Col>\n          </div>\n        )\n      } else {\n        return (\n          <>\n            <Button\n              className='editButton'\n              variant='dark'\n              onClick={() => this.setState({ selectedRecipe: false })}>Back to Recipes</Button>\n            <Button className='editButton' variant='success' onClick={() => this.setState(prevState => ({ editRecipe: true, updatedIngredients: prevState.ingredientsToShow, updatedSteps: prevState.stepsToShow }))}>Edit Recipe</Button>\n            <h1>{this.state.recipeToShowName}</h1>\n            <div className='edit-forms'>\n              {editIngredientsForms}\n              {editStepsForms}\n            </div>\n            <ol>\n              {this.state.ingredientsToShow\n                .sort((ingredientA, ingredientB) => {\n                  const nameA = ingredientA.ingredientName.toLowerCase()\n                  const nameB = ingredientB.ingredientName.toLowerCase()\n                  return nameA < nameB ? -1 : 1\n                })\n                .map((ingredient, index) => (\n                  <li\n                    className='ingredient-list'\n                    style={listStyle}\n                    key={ingredient.index}>\n                    <Col>\n                      <div id={index}>\n                        {ingredient.ingredientName} {ingredient.qty}{' '}{ingredient.units}\n                      </div>\n                    </Col>\n                    <Col>\n                    </Col>\n                  </li>\n                ))}\n              <br />\n              <br />\n              <br />\n              {this.state.stepsToShow.map((step) => (\n                <li className='step-list' key={step.name}>\n                  <Col>{step}</Col>\n                  <Col>\n                  </Col>\n                </li>\n              ))}\n            </ol>\n          </>\n        )\n      }\n    }\n}\n\nexport default Recipe\n","/* eslint-disable no-tabs */\nimport React, { Component, Fragment } from 'react'\nimport { Route } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport Recipe from './components/pages/Recipes'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      user: null,\n      msgAlerts: []\n    }\n  }\n\n  setUser = (user) => this.setState({ user })\n\n  clearUser = () => this.setState({ user: null })\n\n  deleteAlert = (id) => {\n    this.setState((state) => {\n      return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\n    })\n  }\n\n  msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    this.setState((state) => {\n      return {\n        msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\n      }\n    })\n  }\n\n  render () {\n    const { msgAlerts, user } = this.state\n\n    return (\n      <Fragment>\n\t      <Header user={user} />\n\t      {msgAlerts.map((msgAlert) => (\n          <AutoDismissAlert\n            key={msgAlert.id}\n            heading={msgAlert.heading}\n            variant={msgAlert.variant}\n            message={msgAlert.message}\n            id={msgAlert.id}\n            deleteAlert={this.deleteAlert}\n          />\n        ))}\n\t      <main className='container'>\n\t        <Route\n            path='/sign-up'\n            render={() => (\n              <SignUp msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <Route\n            path='/sign-in'\n            render={() => (\n              <SignIn msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/sign-out'\n            render={() => (\n              <SignOut\n                msgAlert={this.msgAlert}\n                clearUser={this.clearUser}\n                user={user}\n              />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/change-password'\n            render={() => (\n              <ChangePassword msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/recipes'\n            render={() => (\n              <Recipe msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n        </main>\n      </Fragment>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}